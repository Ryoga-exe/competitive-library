{
    "Prime factorize": {
        "prefix": "cppPrimeFactorize",
        "body": [
            "vector<pair<ll, ll>> prime_factorize(ll n) {",
            "    vector<pair<ll, ll>> res;",
            "    for (ll i = 2; i * i <= n; i++) {",
            "        if (n % i != 0) continue;",
            "        ll ex = 0;",
            "        while (n % i == 0) {",
            "            ++ex; n /= i;",
            "        }",
            "        res.push_back({ i, ex });",
            "    }",
            "    if (n != 1) res.push_back({ n, 1 });",
            "    return res;",
            "}"
        ],
        "description": "Math - Prime factorize \n O(sqrt(N))"
    },
    "EnumDivisors": {
        "prefix": "cppEnumDivisors",
        "body": [
            "vector<ll> enum_divisors(ll n) {",
            "    vector<ll> res;",
            "    for (ll i = 1; i * i <= n; i++) {",
            "        if (n % i == 0) {",
            "            res.push_back(i);",
            "            if (n/i != i) res.push_back(n/i);",
            "        }",
            "    }",
            "    sort(res.begin(), res.end());",
            "    return res;",
            "}"
        ],
        "description": "Math - Enum divisors \n O(sqrt(N))"
    },
    "ModPow": {
        "prefix": "cppModPow",
        "body": [
            "ll modPow(ll a, ll n, ll p) {",
            "    if (n == 0) return 1;",
            "    if (n == 1) return a % p;",
            "    if (n % 2 == 1) return (a * modPow(a, n - 1, p)) % p;",
            "    ll t = modPow(a, n / 2, p);",
            "    return (t * t) % p;",
            "}"
        ],
        "description": "Math - Mod pow \n O(log(N))"
    },
    "ModInv": {
        "prefix": "cppModInv",
        "body": [
            "ll modInv(ll a, ll p) {",
            "    return modPow(a, p - 2, p);",
            "}"
        ],
        "description": "Math - Mod inv \n O(log(N))"
    },
    "ModInvE": {
        "prefix": "cppModInvE",
        "body": [
            "ll modInvE(ll a, ll m) {",
            "    ll b = m, u = 1, v = 0;",
            "    while (b) {",
            "        ll t = a / b;",
            "        a -= t * b; swap(a, b);",
            "        u -= t * v; swap(u, v);",
            "    }",
            "    u %= m; ",
            "    if (u < 0) u += m;",
            "    return u;",
            "}"
        ],
        "description": "Math - Mod Inv E"
    }

}